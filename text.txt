	SIGUSR - это пользовательские сигналы, которые могут быт использованны 
для межпроцессороной синхронизации и управления. Заголовочный <signal.h>
	
	signal - работа с сигналами ANSI C

	kill - посылает сигнал процессу или выводит список допустимых сигналов  

	getpid, getppid - получение идентификатора процесса

	pause - ожидает сигнал После вызова функции pause вызывающий процесс 
(или подзадача) приостанавливается до тех пор, пока не получит сигнал. 
Данный сигнал либо остановит процесс, либо заставит его вызвать функцию 
обработки этого сигнала.  

	sleep - задежка на указанное время

	usleep - задерживает выполнение операции на определенное количество микросекунд  

	_exit, - функция, завершающая работу программы  exit "немедленно" завершает 
работу программы. Все дескрипторы файлов, принадлежащие процессу, закрываются; 
все его дочерние процессы начинают управляться процессом 1 (init), а 
родительскому процессу посылается сигнал SIGCHLD.

Н Ю А Н С Ы
Из того, что я испытал, если вы не дождетесь, пока процесс-2 завершит свои вычисления,
сигнал, отправленный процессом-1, будет проигнорирован вторым процессом, и ваше 
сообщение / данные будут потеряны.
Чтобы этого не произошло, я бы посоветовал вам отправить сигнал обратно от процесса-2,
чтобы сообщить процессу-1, что вычисление закончено и он может отправить еще
одно сообщение.
Что вы могли бы сделать, так это послать ответный сигнал другому процессу,
 в основном говоря :
Эй, я получил твой сигнал, пошли мне следующий, я готов.